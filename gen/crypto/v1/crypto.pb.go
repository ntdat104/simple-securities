// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: crypto/v1/crypto.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetServerTimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerTimeRequest) Reset() {
	*x = GetServerTimeRequest{}
	mi := &file_crypto_v1_crypto_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerTimeRequest) ProtoMessage() {}

func (x *GetServerTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_v1_crypto_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerTimeRequest.ProtoReflect.Descriptor instead.
func (*GetServerTimeRequest) Descriptor() ([]byte, []int) {
	return file_crypto_v1_crypto_proto_rawDescGZIP(), []int{0}
}

type GetServerTimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerTime    *int64                 `protobuf:"varint,1,opt,name=server_time,json=serverTime,proto3,oneof" json:"server_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerTimeResponse) Reset() {
	*x = GetServerTimeResponse{}
	mi := &file_crypto_v1_crypto_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerTimeResponse) ProtoMessage() {}

func (x *GetServerTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_v1_crypto_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerTimeResponse.ProtoReflect.Descriptor instead.
func (*GetServerTimeResponse) Descriptor() ([]byte, []int) {
	return file_crypto_v1_crypto_proto_rawDescGZIP(), []int{1}
}

func (x *GetServerTimeResponse) GetServerTime() int64 {
	if x != nil && x.ServerTime != nil {
		return *x.ServerTime
	}
	return 0
}

var File_crypto_v1_crypto_proto protoreflect.FileDescriptor

const file_crypto_v1_crypto_proto_rawDesc = "" +
	"\n" +
	"\x16crypto/v1/crypto.proto\x12\tcrypto.v1\x1a\x1cgoogle/api/annotations.proto\"\x16\n" +
	"\x14GetServerTimeRequest\"M\n" +
	"\x15GetServerTimeResponse\x12$\n" +
	"\vserver_time\x18\x01 \x01(\x03H\x00R\n" +
	"serverTime\x88\x01\x01B\x0e\n" +
	"\f_server_time2\x83\x01\n" +
	"\rCryptoService\x12r\n" +
	"\rGetServerTime\x12\x1f.crypto.v1.GetServerTimeRequest\x1a .crypto.v1.GetServerTimeResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/crypto/v1/server_timeBt\n" +
	"\rcom.crypto.v1B\vCryptoProtoP\x01Z\x11/gen/go/crypto/v1\xa2\x02\x03CXX\xaa\x02\tCrypto.V1\xca\x02\tCrypto\\V1\xe2\x02\x15Crypto\\V1\\GPBMetadata\xea\x02\n" +
	"Crypto::V1b\x06proto3"

var (
	file_crypto_v1_crypto_proto_rawDescOnce sync.Once
	file_crypto_v1_crypto_proto_rawDescData []byte
)

func file_crypto_v1_crypto_proto_rawDescGZIP() []byte {
	file_crypto_v1_crypto_proto_rawDescOnce.Do(func() {
		file_crypto_v1_crypto_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_crypto_v1_crypto_proto_rawDesc), len(file_crypto_v1_crypto_proto_rawDesc)))
	})
	return file_crypto_v1_crypto_proto_rawDescData
}

var file_crypto_v1_crypto_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_crypto_v1_crypto_proto_goTypes = []any{
	(*GetServerTimeRequest)(nil),  // 0: crypto.v1.GetServerTimeRequest
	(*GetServerTimeResponse)(nil), // 1: crypto.v1.GetServerTimeResponse
}
var file_crypto_v1_crypto_proto_depIdxs = []int32{
	0, // 0: crypto.v1.CryptoService.GetServerTime:input_type -> crypto.v1.GetServerTimeRequest
	1, // 1: crypto.v1.CryptoService.GetServerTime:output_type -> crypto.v1.GetServerTimeResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_crypto_v1_crypto_proto_init() }
func file_crypto_v1_crypto_proto_init() {
	if File_crypto_v1_crypto_proto != nil {
		return
	}
	file_crypto_v1_crypto_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_crypto_v1_crypto_proto_rawDesc), len(file_crypto_v1_crypto_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crypto_v1_crypto_proto_goTypes,
		DependencyIndexes: file_crypto_v1_crypto_proto_depIdxs,
		MessageInfos:      file_crypto_v1_crypto_proto_msgTypes,
	}.Build()
	File_crypto_v1_crypto_proto = out.File
	file_crypto_v1_crypto_proto_goTypes = nil
	file_crypto_v1_crypto_proto_depIdxs = nil
}
